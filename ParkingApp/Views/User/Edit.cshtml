@model UserModel

@{
    ViewData["Title"] = "Edit";
}


<div class="row" style="display: flex; justify-content:center; align-items:center;">
    <div class="col-md-4">
        <h1 style="text-align:center;">Edit</h1>
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Profile" class="control-label"></label>
                <select class="form-control" asp-for="ProfileId">
                    <option value="1">Admin</option>
                    <option value="2">User</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div hidden class="form-group">
                <input asp-for="Id" class="form-control" />
            </div>
            <div hidden class="form-group">
                <input asp-for="Password" class="form-control" />
            </div>
            <div class="form-group" style="text-align:center;">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
        @Html.ActionLink("Back", "Index", new { }, new { @class = "btn btn-success btn-sm" })
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
