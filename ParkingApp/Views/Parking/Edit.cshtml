@model ParkingViewModel;

@{
    ViewData["Title"] = "Create";
}

<h4>Parking</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input hidden asp-for="Parking.Id"/>
            <input hidden asp-for="Parking.UserId" />
            <div class="form-group">
                <label asp-for="Countries" class="control-label"></label>
                <select class="form-control" asp-for="Parking.CountryId">
                    @foreach (var item in Model.Countries)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Parking.Description" class="control-label"></label>
                <input asp-for="Parking.Description" value="@Model.Parking.Description" class="form-control" />
                <span asp-validation-for="Parking.Description" class="text-danger"></span>
            </div>
            @if(Model.Parking.Id > 0)
            { 
                @for (int i = 0; i < Model.Parking.Spots.Count; i++)
                {
                <div class="col-md-12">
                    
                    @Html.TextBoxFor(it => Model.Parking.Spots[i].Id, new { style = "display: none;" })
                    @Html.TextBoxFor(it => Model.Parking.Spots[i].Number, new { style = "display: none;" })
                    Spot @Model.Parking.Spots[i].Number - @Html.CheckBoxFor(it => Model.Parking.Spots[i].IsRented)
                </div>
                }
            }
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@Html.ActionLink("Back", "Index", new { }, new { @class = "btn btn-success btn-sm" })

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
